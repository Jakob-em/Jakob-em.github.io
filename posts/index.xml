<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Posts on Jakob Emmerling</title><link>https://jakobemmerling.de/posts/</link><description>Recent content in Posts on Jakob Emmerling</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 17 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://jakobemmerling.de/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Angular anti-patterns #01: Subscribing to every observable</title><link>https://jakobemmerling.de/posts/angular-anti-patterns-01/</link><pubDate>Thu, 17 Nov 2022 00:00:00 +0000</pubDate><guid>https://jakobemmerling.de/posts/angular-anti-patterns-01/</guid><description>Rxjs is probably the most difficult thing to grasp when starting out with angular. For that reason often times the benefits of rxjs are not used and code like the following is written.
@Component({ selector: &amp;#39;app-subscribing-to-everything-bad&amp;#39;, standalone: true, imports: [CommonModule], template: ` &amp;lt;h3&amp;gt;Bad&amp;lt;/h3&amp;gt; &amp;lt;p&amp;gt;{{result}}&amp;lt;/p&amp;gt; ` }) export class SubscribingToEverythingBadComponent { result: string | undefined; constructor(someService: SomeServiceService) { someService.loadSomething().subscribe((result) =&amp;gt; { this.result = result; }); } } The first thing that comes to ones mind when seeing observables would be to subscribe to get the value out of there.</description></item><item><title>Hello World</title><link>https://jakobemmerling.de/posts/hello-world/</link><pubDate>Fri, 04 Nov 2022 10:33:08 +0100</pubDate><guid>https://jakobemmerling.de/posts/hello-world/</guid><description>Looks like this blog setup is working. Next up üìù</description></item></channel></rss>